%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 3acd6fe57257048db802c1c4c2b75248, type: 3}
  m_Name: Ship
  m_EditorClassIdentifier: 
  shaderName: Ship
  shaderReference: {fileID: 4800000, guid: 33133defc5bf82847a808e69ffac1c8e, type: 3}
  shaderTemplate: uRaymarching/Deferred/Standard
  variables:
  - key: Name
    value: Ship
  - key: ObjectShape
    value: CUBE
  - key: RaymarchingShaderDirectory
    value: Assets\uRaymarching\Shaders\Include\Legacy
  conditions:
  - key: ShadowCaster
    value: 1
  - key: FullScreen
    value: 0
  - key: WorldSpace
    value: 0
  - key: FollowObjectScale
    value: 0
  - key: CameraInsideObject
    value: 1
  - key: UseRaymarchingDepth
    value: 1
  - key: FallbackToDiffuse
    value: 1
  - key: SphericalHarmonicsPerPixel
    value: 1
  - key: FallbackToStandardShader
    value: 1
  blocks:
  - key: Properties
    value: '        // _Color2 ("Color2", Color) = (1.0, 1.0, 1.0, 1.0)'
    folded: 0
  - key: DistanceFunction
    value: "        #include \"Common.cginc\"\n\n        float dEngine(float3 p)\n       
      {\n            float3 o = p;\n\n            p.xz = foldRotate(o.xz, 12);\n           
      p.y = opRepRange(p.y, 0.12, 0.7);\n            p.z -= cos(abs(o.y * 1.0)) *
      0.3 + 0.1;\n\n            // \u5468\u308A\n            float d = sdBox(p, float3(0.1,
      0.05, 0.02));\n\n            // \u30C7\u30A3\u30C6\u30FC\u30EB\u7528\n           
      p.y -= 0.01;\n            d = min(d, sdBox(p, float3(0.03, 0.04, 0.05)));\n\n           
      // \u82AF\u7DDA\u307F\u305F\u3044\u306E\n            d = min(d, sdCappedCylinder(o,
      cos(abs(1.9 * o.y)) * 0.2, 0.9));\n\n            p = o;\n            p.y -=
      0.65;\n            p.xz = foldRotate(p.xz, 12 * 2);\n            p.z -= 0.18;\n           
      p.xy = mul(rotate(0.3 + 2 * p.z), p.xy);\n            // d = min(d, sdBox(p,
      float3(0.03, 0.04, 0.05)));\n            float dFan = sdBox(p, float3(0.05
      * cos(5 * abs(p.z + 0.2)), 0.002, 0.1)) * 0.7;\n            d = min(d, dFan);\n           
      // d = dFan;\n\n            return d;\n        }\n\n        inline float DistanceFunction(float3
      pos)\n        {\n            return dEngine(pos);\n        }"
    folded: 0
  - key: PostEffect
    value: "        inline void PostEffect(RaymarchInfo ray, inout PostEffectOutput
      o)\n        {\n            \n        }"
    folded: 0
  constants: {fileID: 11400000, guid: b54b57bcc672e49638fe9b2da609c4df, type: 2}
  basicFolded: 1
  conditionsFolded: 1
  variablesFolded: 1
  materialsFolded: 0
  constantsFolded: 0
